FROM --platform=linux/amd64 ubuntu:20.04

RUN apt-get update && apt-get install -y apt-transport-https ca-certificates && \
    rm -rf /var/lib/apt/lists/*

RUN apt-get update && apt-get install -y --no-install-recommends apt-utils gnupg2 curl build-essential git openssh-client wget

# Create a working directory.
RUN mkdir app
WORKDIR app

# Create a non-root user and switch to it.
RUN adduser --disabled-password --gecos '' --shell /bin/bash user \
 && chown -R user:user /app
#RUN echo "user ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/90-user
USER user

# All users can use /home/user as their home directory.
ENV HOME=/home/user
RUN chmod 777 /home/user

# Install Miniconda.
RUN curl -so ~/miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
RUN chmod +x ~/miniconda.sh
RUN ~/miniconda.sh -b -p ~/miniconda
RUN rm ~/miniconda.sh
ENV PATH=/home/user/miniconda/bin:$PATH
ENV CONDA_AUTO_UPDATE_CONDA=false

# Create a Python 3.6 environment.
RUN /home/user/miniconda/bin/conda install conda-build \
 && /home/user/miniconda/bin/conda create -y --name pyg python=3.7 \
 && /home/user/miniconda/bin/conda clean -ya
ENV CONDA_DEFAULT_ENV=pyg
ENV CONDA_PREFIX=/home/user/miniconda/envs/$CONDA_DEFAULT_ENV
ENV PATH=$CONDA_PREFIX/bin:$PATH

RUN conda install pytorch torchvision torchaudio cpuonly -c pytorch-lts -y
#RUN conda install pyg -c pyg
RUN conda install pip

RUN curl -so torch_scatter-2.0.8-cp37-cp37m-linux_x86_64.whl https://data.pyg.org/whl/torch-1.8.0%2Bcpu/torch_scatter-2.0.6-cp37-cp37m-linux_x86_64.whl
RUN pip install torch_scatter-2.0.8-cp37-cp37m-linux_x86_64.whl
run rm torch_scatter-2.0.8-cp37-cp37m-linux_x86_64.whl

RUN curl -so torch_sparse-0.6.12-cp37-cp37m-linux_x86_64.whl https://data.pyg.org/whl/torch-1.8.0%2Bcpu/torch_sparse-0.6.12-cp37-cp37m-linux_x86_64.whl
RUN pip install torch_sparse-0.6.12-cp37-cp37m-linux_x86_64.whl
RUN rm torch_sparse-0.6.12-cp37-cp37m-linux_x86_64.whl

RUN pip install torch-geometric==2.0.1
RUN mkdir tmp

COPY ./requirements.yaml .
RUN  export TMPDIR="tmp"; python3 -m pip install -r requirements.yaml

RUN git clone -q https://github.com/fratajcz/speos.git
RUN cd speos/speos && git clone -q https://github.com/fratajcz/losses.git
RUN cd speos/speos/postprocessing && git clone -q https://github.com/fratajcz/lightgoea.git
RUN cd speos/speos/visualization && git clone -q https://github.com/fratajcz/graphdiagnostic.git
RUN cd speos && pip install .

RUN conda clean -a -y
#RUN rm -rf tmp

CMD ["/bin/bash"]
